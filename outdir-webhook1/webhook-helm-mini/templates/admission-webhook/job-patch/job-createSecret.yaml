---
# Source: webhook-helm-mini/templates/admission-webhook/job-patch/job-createSecret.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: mywebhook
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded   
  name: webhook1-webhook-helm-mini-admission-create
  labels:
    app: webhook-helm-mini-admission-create
    helm.sh/chart: webhook-helm-mini-0.1.0
    app.kubernetes.io/name: webhook-helm-mini
    app.kubernetes.io/instance: webhook1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  template:
    metadata:
      name:  webhook1-webhook-helm-mini-admission-create
      labels:
        app: webhook-helm-mini-admission-create
        helm.sh/chart: webhook-helm-mini-0.1.0
        app.kubernetes.io/name: webhook-helm-mini
        app.kubernetes.io/instance: webhook1
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: create
          image: docker.io/sdedu/kube-webhook-certgen:v20230407
          imagePullPolicy: IfNotPresent
          args:
            - create
            - --host=webhook1-webhook-helm-mini-operator,webhook1-webhook-helm-mini-operator.mywebhook.svc
            - --namespace=mywebhook
            - --secret-name=webhook1-webhook-helm-mini-admission
          securityContext:
          
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          resources:
            {}
      restartPolicy: OnFailure
      serviceAccountName: webhook1-webhook-helm-mini-admission
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
        seccompProfile:
          type: RuntimeDefault
